variables:
  DIR_BUILD: _site

cache:
  paths:
  - vendor/

build-jekyll:
  image: dimmaryanto93/jekyll-build:v3.2.2-debian
  before_script:
    - mkdir -p ${DIR_BUILD}
    - bundle install
    - touch ${DIR_BUILD}/.nojekyll
  script: 
    - bundle exec jekyll build -d ${DIR_BUILD}
  artifacts:
    name: "$CI_JOB_NAME-${CI_COMMIT_SHORT_SHA}"
    paths:
      - ${DIR_BUILD}/*
    expire_in: 1 week
  only:    
    - /-release$/

deploy-pages:
  image: 
    entrypoint: ['']
    name: alpine/git:${GIT_VERSION}
  variables:
    GIT_VERSION: v2.30.1  
    PUSH_OPTIONS: --force
    COMMIT_MESSAGE: "build project ${CI_COMMIT_SHORT_SHA} on branch ${CI_COMMIT_BRANCH} at ${CI_COMMIT_TIMESTAMP}"
    PULL_OPTIONS: --force
    COMMIT_OPTIONS: --allow-empty
    GIT_LOCAL_BRANCH: main
    GIT_REMOTE_BRANCH: gh-pages
    GIT_REMOTE_REPO: "$CI_SERVER_PROTOCOL://${GIT_ACCESS_TOKEN}:${GIT_ACCESS_TOKEN}@$CI_SERVER_HOST:$CI_SERVER_PORT/$CI_PROJECT_PATH.git"
  needs:
    - build-jekyll
  before_script:
    - mkdir -p source && cd source
    - git init -b $GIT_LOCAL_BRANCH
    - git config --global user.email "bot-gitlab-ci@$CI_SERVER_HOST"
    - git config --global user.name "bot-gitlab-ci"
    - git remote add local $GIT_REMOTE_REPO
    - export GIT_EXISTING_REMOTE_BRANCH=$(git ls-remote local --refs heads/$GIT_REMOTE_BRANCH | wc -l);
    - |
      if [ ${GIT_EXISTING_REMOTE_BRANCH} -eq 1 ]; 
        then git pull $PULL_OPTIONS local $GIT_REMOTE_BRANCH:$GIT_LOCAL_BRANCH;
        else echo "Branch: $GIT_REMOTE_BRANCH is not available!";
      fi
  script: 
    - cp -r ../$DIR_BUILD/* .
    - git add .
    - git commit $COMMIT_OPTIONS -m "${COMMIT_MESSAGE}"
    - git push $PUSH_OPTIONS $GIT_REMOTE_REPO $GIT_LOCAL_BRANCH:$GIT_REMOTE_BRANCH
  only:    
    - /-release$/
